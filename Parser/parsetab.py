
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'EQUALS ID LET MINUS NUM PLUS SEMICOLONexpression : expression PLUS termexpression : expression MINUS termexpression : termterm : factorfactor : NUM'
    
_lr_action_items = {'NUM':([0,5,6,],[4,4,4,]),'$end':([1,2,3,4,7,8,],[0,-3,-4,-5,-1,-2,]),'PLUS':([1,2,3,4,7,8,],[5,-3,-4,-5,-1,-2,]),'MINUS':([1,2,3,4,7,8,],[6,-3,-4,-5,-1,-2,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,],[1,]),'term':([0,5,6,],[2,7,8,]),'factor':([0,5,6,],[3,3,3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','parserMain.py',8),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','parserMain.py',13),
  ('expression -> term','expression',1,'p_expression_term','parserMain.py',18),
  ('term -> factor','term',1,'p_term_factor','parserMain.py',23),
  ('factor -> NUM','factor',1,'p_factor_num','parserMain.py',28),
]
